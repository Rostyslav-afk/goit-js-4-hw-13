const e=e=>new Promise(t=>{setTimeout(()=>t(e),e)}),t=e=>console.log(`Resolved after ${e}ms`);e(2e3).then(t),e(1e3).then(t),e(1500).then(t);const n=[{name:"Mango",active:!0},{name:"Poly",active:!1},{name:"Ajax",active:!0},{name:"Lux",active:!1}],a=(e,t)=>new Promise(n=>{n(e.map(e=>e.name===t?{...e,active:!e.active}:e))}),o=e=>console.table(e);a(n,"Mango").then(o),a(n,"Lux").then(o);const i=e=>{let t=Math.floor(301*Math.random()+200);return new Promise((n,a)=>{setTimeout(()=>{Math.random()>.3?n({id:e.id,time:t}):a(e.id)},t)})},c=({id:e,time:t})=>{console.log(`Transaction ${e} processed in ${t}ms`)},s=e=>{console.warn(`Error processing transaction ${e}. Please try again later.`)};i({id:70,amount:150}).then(c).catch(s),i({id:71,amount:230}).then(c).catch(s),i({id:72,amount:75}).then(c).catch(s),i({id:73,amount:100}).then(c).catch(s);
//# sourceMappingURL=goit-js-4-hw-13.bb29dc00.js.map
